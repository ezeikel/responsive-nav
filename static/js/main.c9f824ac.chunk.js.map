{"version":3,"sources":["GlobalStyle.js","pages/index.js","pages/search.js","pages/bag.js","pages/saved.js","pages/account.js","components/Main.js","components/Nav.js","components/Cart.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["createGlobalStyle","_templateObject","homePage","react_default","a","createElement","searchPage","bagPage","savedPage","accountPage","Wrapper","styled","main","Main_templateObject","Main","Switch","Route","exact","path","component","nav","Nav_templateObject","NavLinks","ul","_templateObject2","_ref","active","concat","Nav","_ref2","toggleActive","Nav_Wrapper","Link","to","react_fontawesome_index_es","icon","color","size","onClick","Cart","header","Header_templateObject","Header","_useState","useState","_useState2","Object","slicedToArray","Header_Wrapper","components_Nav","components_Cart","library","add","fab","far","faShoppingBag","faHeart","faUser","faSearch","div","App_templateObject","App","BrowserRouter","react","GlobalStyle","App_Wrapper","components_Header","components_Main","Component","Boolean","window","location","hostname","match","render","src_App","document","querySelector","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c9f824ac.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n/* CSS Variables */\n:root {\n  /* Colors */\n  --color-primary: #1abc9c;\n  /* --color-primary: #F7E7CE; */\n  --color-secondary: #F1D3D1;\n  --color-black: #2E3333;\n  --color-white: #fff;\n  --color-gold: #CDA349;\n  --color-gold-lighter: #d4af61;\n  --color-light-grey: #ecf0f1;\n  --color-red: #e74c3c;\n  --color-dark-red: #c0392b;\n  --color-green: #2ecc71;\n  --color-grey: #bdc3c7;\n  --color-gold-star: #f1c40f;\n  /* Spacing */\n  --spacing-tiny: 4px;\n  --spacing-small: 8px;\n  --spacing-medium: 16px;\n  --spacing-large: 32px;\n  --spacing-huge: 64px;\n  /* Font */\n  --default-font-family: 'proxima-nova', sans-serif;\n  --default-font-size: 10px;\n  --font-size-tiny: 1.4rem;\n  --font-size-small: 1.6rem;\n  --font-size-medium: 1.8rem;\n  --font-size-large: 2rem;\n  --font-size-huge: 2.2rem;\n}\n* {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-size: var(--default-font-size);\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: var(--default-font-family);\n}\n\nimg {\n  max-width: 100%;\n}\n\na {\n  text-decoration: none;\n}\n\nul {\n  list-style-type: none;\n  padding-left: 0;\n  margin: 0;\n}\n`;\n","import React from \"react\";\n\nconst homePage = () => (\n  <h1>Home page</h1>\n);\n\nexport default homePage;\n","import React from \"react\";\n\nconst searchPage = () => (\n  <h1>Search page</h1>\n);\n\nexport default searchPage;\n","import React from \"react\";\n\nconst bagPage = () => (\n  <h1>Bag page</h1>\n);\n\nexport default bagPage;\n","import React from \"react\";\n\nconst savedPage = () => (\n  <h1>Saved page</h1>\n);\n\nexport default savedPage;\n","import React from \"react\";\n\nconst accountPage = () => (\n  <h1>Account page</h1>\n);\n\nexport default accountPage;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport homePage from \"../pages/index\";\nimport searchPage from \"../pages/search\";\nimport bagPage from \"../pages/bag\";\nimport savedPage from \"../pages/saved\";\nimport accountPage from \"../pages/account\";\n\nconst Wrapper = styled.main`\n  padding: var(--spacing-medium);\n`;\n\nconst Main = () => {\n  return (\n    <Wrapper>\n      <Switch>\n        <Route exact path=\"/\" component={homePage} />\n        <Route exact path=\"/search\" component={searchPage} />\n        <Route exact path=\"/bag\" component={bagPage} />\n        <Route exact path=\"/saved\" component={savedPage} />\n        <Route exact path=\"/account\" component={accountPage} />\n      </Switch>\n    </Wrapper>\n  );\n};\n\nexport default Main;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Wrapper = styled.nav`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  box-shadow: 0 -3px 3rem 0px rgba(0, 0, 0, 0.1);\n  @media (min-width: 768px) {\n    position: relative;\n    box-shadow: none;\n  }\n`;\n\nconst NavLinks = styled.ul`\n  //transform: ${({ active }) => `translateX(${active ? 0 : \"100vw\"})`};\n  //transition: transform 0.3s ease-in-out;\n  display: grid;\n  grid-template-columns: repeat(5, auto);\n  place-items: center;\n  padding: var(--spacing-medium);\n  > li {\n    width: 100%;\n    display: grid;\n    place-items: center;\n  }\n  @media (min-width: 768px) {\n    grid-column-gap: var(--spacing-large);\n    padding: 0;\n  }\n`;\n\nconst Nav = ({ active, toggleActive }) => {\n\n  return (\n    <Wrapper>\n      <NavLinks>\n        <li>\n          <Link to=\"home\">\n            <FontAwesomeIcon icon={[\"far\", \"home\"]} color=\"#000\" size=\"lg\" />\n          </Link>\n        </li>\n        <li>\n          <Link to=\"search\">\n            <FontAwesomeIcon icon={[\"far\", \"search\"]} color=\"#000\" size=\"lg\" />\n          </Link>\n        </li>\n        <li>\n          <FontAwesomeIcon icon={[\"far\", \"shopping-bag\"]} color=\"#000\" size=\"lg\" onClick={() => toggleActive(!active)} />\n        </li>\n        <li>\n          <Link to=\"saved\">\n            <FontAwesomeIcon icon={[\"far\", \"heart\"]} color=\"#000\" size=\"lg\" />\n          </Link>\n        </li>\n        <li>\n          <Link to=\"account\">\n            <FontAwesomeIcon icon={[\"far\", \"user\"]} color=\"#000\" size=\"lg\" />\n          </Link>\n        </li>\n      </NavLinks>\n    </Wrapper>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\n\nconst Cart = ({ active }) => {\n  return (\n    <div>\n      Cart is {active ? 'open' : 'closed'}\n    </div>\n  );\n}\n\nexport default Cart;\n","import React, { useState } from 'react';\nimport styled from \"styled-components\";\nimport Nav from \"./Nav\";\nimport Cart from \"./Cart\";\n\nconst Wrapper = styled.header`\n  position: relative;\n  display: grid;\n  grid-template-columns: auto auto;\n  justify-content: space-between;\n  place-items: center;\n  padding: var(--spacing-medium);\n  font-size: var(--font-size-small);\n  box-shadow: 0px 4px 1.5rem 0px rgba(0, 0, 0, 0.1);\n`;\n\nconst Header = () => {\n  const [active, toggleActive] = useState(false);\n\n  return (\n    <Wrapper>\n      Five Yards\n      <Nav active={active} toggleActive={toggleActive} />\n      <Cart active={active} />\n    </Wrapper>\n  );\n};\n\nexport default Header;\n","import React, { Component, Fragment } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport GlobalStyle from './GlobalStyle';\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { far } from \"@fortawesome/pro-regular-svg-icons\";\nimport {\n  faShoppingBag,\n  faHeart,\n  faUser,\n  faSearch\n} from \"@fortawesome/pro-regular-svg-icons\";\nimport Main from './components/Main';\nimport Header from './components/Header';\nimport 'normalize.css';\n\nlibrary.add(fab, far, faShoppingBag, faHeart, faUser, faSearch);\n\nconst Wrapper = styled.div`\n  display: grid;\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <Fragment>\n        <GlobalStyle />\n        <Wrapper>\n            <Header />\n            <Main />\n          </Wrapper>\n      </Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nimport * as serviceWorker from './serviceWorker';\n\nrender(<App />, document.querySelector(\"#root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}